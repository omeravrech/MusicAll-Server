{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/default.component.css","webpack:///./src/app/default.component.html","webpack:///./src/app/default.component.ts","webpack:///./src/app/home.component.ts","webpack:///./src/app/menu.component.css","webpack:///./src/app/menu.component.html","webpack:///./src/app/menu.component.ts","webpack:///./src/app/models/Link.ts","webpack:///./src/app/models/action.ts","webpack:///./src/app/models/contact-derails.ts","webpack:///./src/app/models/http-response-object.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/pages/PlayerView/player.component.ts","webpack:///./src/app/pages/PlayerView/player.module.ts","webpack:///./src/app/pages/PlayerView/player.routing.ts","webpack:///./src/app/pages/RegularUser/about.component.css","webpack:///./src/app/pages/RegularUser/about.component.html","webpack:///./src/app/pages/RegularUser/about.component.ts","webpack:///./src/app/pages/RegularUser/add-song.component.css","webpack:///./src/app/pages/RegularUser/add-song.component.html","webpack:///./src/app/pages/RegularUser/add-song.component.ts","webpack:///./src/app/pages/RegularUser/contact-us.component.css","webpack:///./src/app/pages/RegularUser/contact-us.component.html","webpack:///./src/app/pages/RegularUser/contact-us.component.ts","webpack:///./src/app/pages/RegularUser/discover.component.css","webpack:///./src/app/pages/RegularUser/discover.component.html","webpack:///./src/app/pages/RegularUser/discover.component.ts","webpack:///./src/app/pages/RegularUser/login.component.css","webpack:///./src/app/pages/RegularUser/login.component.html","webpack:///./src/app/pages/RegularUser/login.component.ts","webpack:///./src/app/pages/RegularUser/playlist-display.component.css","webpack:///./src/app/pages/RegularUser/playlist-display.component.html","webpack:///./src/app/pages/RegularUser/playlist-dsiplay.component.ts","webpack:///./src/app/pages/RegularUser/register.component.css","webpack:///./src/app/pages/RegularUser/register.component.html","webpack:///./src/app/pages/RegularUser/register.component.ts","webpack:///./src/app/pages/RegularUser/user-home.component.ts","webpack:///./src/app/pages/RegularUser/viewer.module.ts","webpack:///./src/app/pages/RegularUser/viewer.routing.ts","webpack:///./src/app/route.module.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/contact.service.ts","webpack:///./src/app/services/player.service.ts","webpack:///./src/app/services/server-handler.service.ts","webpack:///./src/app/services/web-socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule }  from '@angular/platform-browser';\r\nimport { NgModule }       from '@angular/core';\r\nimport { AppRouteModule } from './route.module';\r\nimport { FormsModule }    from '@angular/forms';\r\n//----------------------------------//\r\n//            Imports               //\r\n//----------------------------------//\r\nimport { HttpClientModule }        from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ViewerModule }            from './pages/RegularUser/viewer.module';\r\nimport { PlayerModule }            from './pages/PlayerView/player.module';\r\n//----------------------------------//\r\n//          Declarations            //\r\n//----------------------------------//\r\nimport { DefaultComponent }  from './default.component';\r\nimport { MenuComponent }     from './menu.component';\r\nimport { HomeComponent }     from './home.component';\r\n//----------------------------------//\r\n//            Services              //\r\n//----------------------------------//\r\nimport { ServerHandlerService } from './services/server-handler.service';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { PlayerService } from './services/player.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DefaultComponent,\r\n    MenuComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    AppRouteModule,\r\n    HttpClientModule,\r\n    ViewerModule,\r\n    PlayerModule\r\n  ],\r\n  bootstrap: [\r\n    DefaultComponent,\r\n    MenuComponent\r\n  ],\r\n  providers: [\r\n    ServerHandlerService,\r\n    AuthenticationService,\r\n    PlayerService\r\n  ]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './default.component.html',\r\n  styleUrls: ['./default.component.css']\r\n})\r\nexport class DefaultComponent {\r\n  title = 'MusicAll';\r\n}","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  template: `\r\n    <app-user-home *ngIf=\"!player\"></app-user-home>\r\n    <app-player *ngIf=\"player\"></app-player>\r\n  `,\r\n  styles: [``],\r\n})\r\n\r\nexport class HomeComponent {\r\n  private player:boolean = false;\r\n\r\n  \r\n  constructor(private auth: AuthenticationService) {\r\n    if (!this.auth.Privileges || !this.auth.Privileges.length) {\r\n      this.player = false;\r\n    } else {\r\n      if (this.auth.Privileges.indexOf(\"player\") < 0)\r\n        this.player = false;\r\n      else\r\n        this.player = true;\r\n    }\r\n  }\r\n}\r\n","module.exports = \".Logo {\\r\\n    width: 100%;\\r\\n    height:180px;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    display: block;\\r\\n    background-image: url('logo.png');\\r\\n    background-repeat: no-repeat; /* Do not repeat the image */\\r\\n    background-position: center; /* Center the image */\\r\\n    background-size: 100px; /* Resize the background image to cover the entire container */\\r\\n    background-color: #000;\\r\\n}\\r\\n.SideBarMenu {\\r\\n    width:100%;\\r\\n    height:calc(100% - 180px);\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    display: block;\\r\\n    text-align: center;\\r\\n}\\r\\nul {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    width: 100%;\\r\\n    overflow: hidden;\\r\\n    list-style-type: none;\\r\\n}\\r\\nli {\\r\\n    width: 100%;\\r\\n    padding: 5px 0px;\\r\\n    align-items: center;\\r\\n}\\r\\nli a {\\r\\n    display: block;\\r\\n    color: white;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n    font-family: \\\"Comic Sans MS\\\";\\r\\n    font-size: 110%;\\r\\n}\\r\\nli:hover {\\r\\n    background-color: #111;\\r\\n}\\r\\nimg {\\r\\n    width: 50px;\\r\\n    height:50px;\\r\\n}\"","module.exports = \"<section class=\\\"Logo\\\"></section>\\r\\n<section class=\\\"SideBarMenu\\\" style=\\\"background-color: #000\\\">\\r\\n    <ul>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/home\\\">Home</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/contact\\\">Contact Us</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/about\\\">About</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/discover\\\">Discover Your Music</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"!isloggedin()\\\">\\r\\n            <a routerLink=\\\"/login\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span>  Login</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"!isloggedin()\\\">\\r\\n            <a routerLink=\\\"/register\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>  Register</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isloggedin()\\\">\\r\\n            <a routerLink=\\\"/login\\\">Logout</a>\\r\\n        </li>\\r\\n    </ul> \\r\\n</section>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\n\r\n\r\nexport class MenuComponent implements OnInit {\r\n  constructor(private _auth: AuthenticationService) {}\r\n  ngOnInit() {}\r\n\r\n  isloggedin() {\r\n    return this._auth.isLoggedIn();\r\n  }\r\n}\r\n","import { DataSerialize } from \"./data-serialize\";\r\n\r\nexport class Link implements DataSerialize {\r\n    private link: string;\r\n  \r\n    constructor(url?: string) { if (url) this.link = url; }\r\n    toJson() { return { \"url\": this.link }; }\r\n    fromJson(json: any): void { this.link = json.url; }\r\n  }","export enum Action {\r\n    ADD = \"add\",\r\n    REMOVE = \"remove\",\r\n    STOP = \"stop\"\r\n}","import { DataSerialize } from \"./data-serialize\";\r\n\r\nexport class ContactDetails implements DataSerialize {\r\n    public firstname: string;\r\n    public lastname: string;\r\n    public email: string;\r\n    public message: string;\r\n  \r\n      constructor() { \r\n          this.firstname = null;\r\n          this.lastname = null;\r\n          this.email = null;\r\n          this.message = null;\r\n      }\r\n  \r\n      toJson() {\r\n          return {\r\n            \"firstname\": this.firstname,\r\n            \"lastname\": this.lastname,\r\n            \"email\": this.email,\r\n            \"message\": this.message,\r\n          }\r\n      }\r\n      fromJson(json: Object) {\r\n        this.firstname = json['firstname'];\r\n        this.lastname = json['lastname'];\r\n        this.email = json['email'];\r\n        this.message = json['message'];\r\n      }\r\n  }","export class HttpResponseObject {\r\n    private _code: number;\r\n    private _message: string;\r\n    private _data: Object;\r\n\r\n    constructor(code: number, message: string, data:object) {\r\n        this._code = code;\r\n        this._message = message;\r\n        this._data = data;\r\n    }\r\n    \r\n    get code(): number { return this._code; }\r\n    get message(): string { return this._message; }\r\n    get data(): Object { return this._data; }\r\n}","import { DataSerialize } from './data-serialize'\r\n\r\nexport class User implements DataSerialize {\r\n  public firstname: string;\r\n  public lastname: string;\r\n  public email: string;\r\n  public password: string;\r\n  public privileges: Array<string>;\r\n\r\n  constructor() { \r\n      this.firstname = null;\r\n      this.lastname = null;\r\n      this.email = null;\r\n      this.password = null;\r\n      this.privileges = null;\r\n   }\r\n\r\n   toJson():any {\r\n      return {\r\n          \"email\": this.email,\r\n          \"password\": this.password,\r\n          \"firstname\": this.firstname,\r\n          \"lastname\": this.lastname,\r\n          \"privileges\": this.privileges\r\n      };\r\n  }\r\n  fromJson(json: any): void {\r\n      this.email = json.email;\r\n      this.password = null;\r\n      this.firstname = json.firstname || json.first;\r\n      this.lastname = json.lastname || json.last;\r\n      this.privileges = json.privileges;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { PlayerService } from '../../services/player.service';\r\n\r\n@Component({\r\n  selector: 'app-player',\r\n  template: `\r\n    <div>\r\n        <div class=\"embed-responsive embed-responsive-16by9\">\r\n            <div id=\"player\"></div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `.YTiframe: {\r\n            text-align: center;\r\n            padding: 5%;\r\n        }`\r\n    ]\r\n})\r\n\r\nexport class PlayerComponent {\r\n    player:any;\r\n\r\n    constructor (private backend: PlayerService){\r\n        this.player = new Player;\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.player.Init(this.backend);\r\n    }\r\n}\r\n\r\nclass Player {\r\n    private backend: PlayerService;\r\n    public YT: any;\r\n    public playlist: object;\r\n    public player: any;\r\n    \r\n    Init (backend: PlayerService) {\r\n        this.backend = backend;\r\n        var tag = document.createElement('script');\r\n        tag.src = 'https://www.youtube.com/iframe_api';\r\n        var firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n        window['onYouTubeIframeAPIReady'] = (e) => {\r\n            this.YT = window['YT'];\r\n            this.player = new window['YT'].Player('player', {\r\n                playerVars: { \r\n                    autoplay: 1,\r\n                    controls: 0,\r\n                    disablekb: 0,\r\n                    fs: 0,\r\n                    rel: 0,\r\n                    showinfo: 0\r\n                },\r\n                events: {\r\n                    'onStateChange': this.onPlayerStateChange.bind(this),\r\n                    'onError': this.onPlayerError.bind(this),\r\n                    'onReady': this.onPlayerReady.bind(this)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onPlayerReady(event) {\r\n            event.target.playVideo();\r\n    };\r\n    onPlayerStateChange(event) {\r\n        switch (event.data) {\r\n            case window['YT'].PlayerState.PAUSED:\r\n                    event.target.playVideo();\r\n                break;\r\n            case window['YT'].PlayerState.ENDED:\r\n                    this.onPlayerError(event);\r\n                break;\r\n            case window['YT'].PlayerState.BUFFERING:\r\n                break;\r\n            case window['YT'].PlayerState.PLAYING:\r\n                break;\r\n            case window['YT'].PlayerState.CUED:\r\n        };\r\n    };\r\n\r\n    onPlayerError(event) {\r\n            this.backend.nextSong()\r\n                .subscribe({\r\n                    next: value => {\r\n                        event.target.loadVideoById(value.data['id'], 0, 'Large')\r\n                    },\r\n                    error: () => this.onPlayerError(event)\r\n            });\r\n    };\r\n}   ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlayerComponent } from './player.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PlayerRoutes } from './player.routing';\nimport { PlayerService } from '../../services/player.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    PlayerRoutes\n  ],\n  declarations: [\n    PlayerComponent\n  ],\n  providers: [\n    PlayerService\n  ],\n  exports: [\n    PlayerComponent\n  ]\n})\nexport class PlayerModule { }\n","import { PlayerComponent } from \"./player.component\";\r\nimport { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nexport const PlayerRoutes: ModuleWithProviders = RouterModule.forChild([\r\n    { path: '',   component: PlayerComponent },\r\n]);","module.exports = \"agm-map {\\r\\n    height: 400px;\\r\\n    width: 90%;\\r\\n    margin: 0;\\r\\n    left: 5%;\\r\\n    position: relative;\\r\\n    margin-right: 5%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div>\\n  <!--    Info card    -->\\n  <div class=\\\"card text-white mb-3\\\" style=\\\"width: 90%; position: relative; margin: 5%; background-color: #ff6ec7;\\\">\\n    <div class=\\\"card-header\\\"><h5>About Us</h5></div>\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">MusicAll</h5>\\n      <p class=\\\"card-text\\\">\\\"There is nothing better than a good lie\\\" - Evenecense</p>\\n    </div>\\n  </div>\\n  <!--    Map    -->\\n  <div>\\n    <agm-map [latitude]=\\\"32.1\\\" [longitude]=\\\"35\\\" [zoom]=\\\"10\\\">\\n            <agm-marker *ngFor=\\\"let location of locations\\\" [latitude]=\\\"location.latitude\\\" [longitude]=\\\"location.longitude\\\">\\n                <agm-info-window *ngIf=\\\"location.description\\\">{{location.description}}</agm-info-window>\\n            </agm-marker>\\n    </agm-map>\\n  </div>\\n</div>\\n\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  locations = [];\r\n  \r\n  constructor() { \r\n    this.locations.push({ latitude: 32.086068, longitude: 34.774538, description: \"Headquarter\" });\r\n    this.locations.push({ latitude: 32.1202729, longitude: 34.8381131, description: \"Omer\" });\r\n    this.locations.push({ latitude: 32.0762145, longitude: 34.8463699, description: \"May\" }); \r\n    this.locations.push({ latitude: 32.0368303, longitude: 34.8885722, description: \"Yulia\"});   \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"input[type=\\\"url\\\"] {\\r\\n  background-color: transparent;\\r\\n  border-width: 0px 0px 1px 0px;\\r\\n  border-color:rgb(133, 133, 133);\\r\\n  width: 70%;\\r\\n  height: 25px;\\r\\n  font-size: 14px;\\r\\n  position:absolute;\\r\\n  margin: 0;\\r\\n  bottom: 0;\\r\\n  color: #ffffff\\r\\n}\\r\\n\\r\\ninput[type=\\\"url\\\"]:focus {\\r\\n  outline: 0 none;\\r\\n}\\r\\n\\r\\n.input-component {\\r\\n  padding: 2%;\\r\\n  height: 40px;\\r\\n  position: inherit;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  color: rgb(133, 133, 133);\\r\\n  transition: 0.5s;\\r\\n  -moz-transition: 0.5s; /* Firefox 4 */\\r\\n  -webkit-transition: 0.5s; /* Safari and Chrome */\\r\\n  -o-transition: 0.5s;\\r\\n  position: absolute;\\r\\n  bottom: 0px;\\r\\n  font-family: 'Courier New';\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  right: 0px;\\r\\n  bottom: 0px;\\r\\n  position:absolute;\\r\\n  width: 20%;\\r\\n}\"","module.exports = \"\\r\\n<div class=\\\"alert bg-dark table\\\">\\r\\n    <div clss=\\\"row\\\">\\r\\n        <form>\\r\\n            <div class=\\\"input-component\\\" style=\\\"position: relative;\\\">\\r\\n                <input type=\\\"url\\\" name=\\\"url\\\" (focus)=\\\"inputOnBlur()\\\" (focusout)=\\\"inputOnBlurOut()\\\" [(ngModel)]=\\\"url\\\" [ngStyle]=\\\"inputStyle\\\"/>\\r\\n                <label [ngStyle]=\\\"textStyle\\\">Enter link</label>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onSubmitNewSong()\\\">Send</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div [hidden]=\\\"!isEmpty\\\" clss=\\\"row\\\" style=\\\"color: red; padding-left: 2%;\\\">\\r\\n        * Youtube link cannot be empty.\\r\\n    </div>\\r\\n    <div [hidden]=\\\"!isValid\\\" clss=\\\"row\\\" style=\\\"color: red; padding-left: 2%;\\\">\\r\\n        * invalid youtube link.\\r\\n    </div>\\r\\n    <div [hidden]=\\\"!isNotSent\\\" clss=\\\"row\\\" style=\\\"color: red; padding-left: 2%;\\\">\\r\\n        Something went worng while trying to send your request. please try again later.\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PlayerService } from '../../services/player.service';\nimport { DataSerialize } from '../../models/data-serialize';\n\n\n@Component({\n  selector: 'add-song-component',\n  templateUrl: './add-song.component.html',\n  styleUrls: ['./add-song.component.css'],\n})\n\nexport class AddSongComponent implements OnInit {\n\n  textStyle;\n  inputStyle;\n  url: string;\n  isNotSent: boolean;\n  isEmpty: boolean;\n  isValid: boolean;\n  urlValidator = new RegExp(/^((http[s]?\\:\\/\\/){0,1}([Ww][Ww][Ww]\\.)){0,1}[Yy][Oo][Uu][Yt][Uu][Bb][Ee]\\.[Cc][Oo][Mm]\\/(([Ww]atch\\?v=)|([vV]\\/))(...........)/g);\n\n  constructor(private backend: PlayerService, private router:Router) {}\n\n  ngOnInit() {\n    this.url = \"\";\n    this.isNotSent = false;\n    this.isEmpty = false;\n    this.isValid = false;\n    this.textStyle = {};\n    this.inputStyle = {};\n    this.inputOnBlurOut();\n  }\n\n  onSubmitNewSong() {\n    if (!this.url || this.url == \"\") {\n      this.isEmpty = true;\n      return;\n    } else {\n      this.isEmpty = false;\n    }\n    if (!this.urlValidator.test(this.url)) {\n      this.isValid = true;\n      return;\n    } else {\n      this.isValid = false;\n    }\n    this.backend.addSong(this.url)\n      .subscribe({\n        next:() => {\n          this.url = \"\";\n          this.inputOnBlurOut();\n          this.isNotSent = false;\n        },\n        error: () => this.isNotSent = true\n      });\n  }\n\n  inputOnBlur(): void {\n    if (this.url == \"\") {\n      this.textStyle['font-size'] = \"10px\";\n      this.textStyle['bottom'] = \"100%\";\n      this.inputStyle['color'] = '#ffffff';\n    }\n  }\n  inputOnBlurOut(): void {\n    if (this.url == \"\") {\n      this.textStyle['font-size'] = \"36px\";\n      this.textStyle['bottom'] = \"0px\";\n      this.inputStyle['color'] = \"transparent\";\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"margin: auto; padding: 5%; max-width: 60%;\\\">\\n    <div class=\\\"card text-white bg-dark mb-3\\\">\\n        <div class=\\\"card-header\\\" style=\\\"text-align: center;\\\">\\n            <h1>Contacs us</h1>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div [hidden]=\\\"submitted\\\">\\n                <form #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(contactForm)\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"FirstNameInput\\\">First name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"FirstNameInput\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\" [(ngModel)]=\\\"model.firstname\\\" placeholder=\\\"First name\\\" required>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"LastNameInput\\\">Last name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LastNameInput\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\" [(ngModel)]=\\\"model.lastname\\\" placeholder=\\\"Last name\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-12 mb-3\\\">\\n                            <label for=\\\"EmailInput\\\" data-error=\\\"Invalid email!\\\">Email</label>\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"EmailInput\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" [pattern]=\\\"emailPattern\\\" placeholder=\\\"Email\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-12 mb-3\\\">\\n                            <label for=\\\"messageInput\\\">Message</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"messageInput\\\" name=\\\"message\\\" #message=\\\"ngModel\\\" [(ngModel)]=\\\"model.message\\\" placeholder=\\\"Type your message here\\\" required></textarea>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-12 mb-3\\\">\\n                            <button type=\\\"submit\\\" [disabled]=\\\"!contactForm.valid\\\" class=\\\"btn btn-secondary btn-block\\\"><b> S u b m i t </b></button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div [hidden]=\\\"!submitted\\\">\\n                 Thank you for contact us. Our support team will contact you if needed.\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport { ContactDetails } from '../../models/contact-derails';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { ContactService } from '../../services/contact.service';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\n\nexport class ContactUsComponent implements OnInit {\n\n    model: ContactDetails;\n    submitted: boolean;\n    error: Error;\n\n    constructor(private auth: AuthenticationService, private contact: ContactService) {}\n\n    ngOnInit() {\n        this.model = new ContactDetails;\n        try {\n            this.model.fromJson({\n                firstname: this.auth.FirtName,\n                lastname: this.auth.Lastname,\n                email: this.auth.Email,\n                message: \"\"\n            });\n        } catch {}\n        this.submitted = false;\n        this.error = null;\n    }\n\n  onSubmit(form: NgForm) {\n      if (form.valid)\n          this.contact.send(this.model).subscribe({\n              next: () => {\n                  this.ngOnInit();\n                  this.submitted = true;\n              },\n              error: (err) => {\n                  this.error = err;\n              }\n          })\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  discover works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-discover',\r\n  templateUrl: './discover.component.html',\r\n  styleUrls: ['./discover.component.css']\r\n})\r\nexport class DiscoverComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"margin: auto; padding: 5%; max-width: 60%\\\" [hidden]=\\\"isLogged()\\\">\\r\\n    <div class=\\\"card bg-dark text-white mb-3\\\">\\r\\n        <div class=\\\"card-header\\\" style=\\\"text-align: center;\\\">\\r\\n            <h1>Log In To Your Account</h1>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div [hidden]=\\\"submitted\\\">\\r\\n                <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitLogin(loginForm)\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <label for=\\\"EmailInput\\\">Email</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"EmailInput\\\" name=\\\"email\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"col-md-12 mb-3\\\">\\r\\n                          <label for=\\\"PasswordInput\\\" data-error=\\\"Invalid Password, Please try again\\\">Password</label>\\r\\n                          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"PasswordInput\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" required>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div style=\\\"color: tomato;\\\">\\r\\n                        <p *ngIf=\\\"this.errorCode == 401\\\">Login failed. please try again</p>\\r\\n                        <p *ngIf=\\\"this.errorCode === 400\\\">You enter wrong username or password. please try again</p>\\r\\n                        <p *ngIf=\\\"this.errorCode == 500\\\">Something went wrong with the server. please try again later.</p>\\r\\n                        <p *ngIf=\\\"this.errorCode == 0\\\">General error. please try again later.</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <button type=\\\"login\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-secondary btn-block\\\"><b> LOGIN </b></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"margin: auto; padding: 5%; max-width: 60%;\\\" [hidden]=\\\"!isLogged()\\\">\\r\\n    <div class=\\\"card text-white bg-dark mb-3\\\">\\r\\n        <div class=\\\"card-header\\\" style=\\\"text-align: center;\\\">\\r\\n            <h2>Are you sure you're want to logout?</h2>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-6 mb-6\\\" style=\\\"margin: auto;\\\">\\r\\n                <button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"onSubmitLogout()\\\"><b> Y e s </b></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { User } from '../../models/user';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n    model: User;\r\n    submitted: Boolean = false;\r\n    errorCode: Number = -1;\r\n    emailPattern: RegExp = new RegExp(\"^[a-z0-9\\.\\_\\%\\+\\-]+\\@[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z\\.]{2,5}$\");\r\n\r\n    constructor(private auth: AuthenticationService , private router:Router) {}\r\n\r\n    ngOnInit() {\r\n        this.model = new User;\r\n        this.model.email = \"\",\r\n        this.model.password = \"\"\r\n    }\r\n\r\n    isLogged() { return this.auth.isLoggedIn(); }\r\n\r\n    onSubmitLogin(form: NgForm) {\r\n        if (this.emailPattern.test(this.model.email)){\r\n            this.auth.authenticate(this.model.email, this.model.password)\r\n            .subscribe({\r\n                next: () => { this.router.navigate(['/home']); },\r\n                error: () => { this.errorCode = this.auth.errorCode(); }\r\n            });\r\n        } else {\r\n            // @TODO email verification\r\n        }\r\n        \r\n    }\r\n    onSubmitLogout() {\r\n        this.auth.logout()\r\n            .subscribe(\r\n                () => { this.router.navigate(['/home']); },\r\n                () => { this.errorCode = this.auth.errorCode(); }\r\n            );\r\n    }\r\n}\r\n","module.exports = \".title {\\r\\n    background-color: #f140ad;\\r\\n    border: 0px solid transparent;\\r\\n    color: white;\\r\\n    font: 20px bold;\\r\\n    font-family: 'Comic Sans MS';\\r\\n    margin-top: 1%;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.songDisplay {\\r\\n    background-color: #343a40!important;\\r\\n    color: rgb(133, 133, 133);\\r\\n    border: 0px solid transparent;\\r\\n    font: 11px;\\r\\n    margin-top: 1%;\\r\\n    padding: 5px;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n  \"","module.exports = \"  <table mat-table #playlisy [dataSource]=\\\"dataSource\\\" style=\\\"width: 100%\\\">\\n      \\n      <!-- Image Column -->\\n      <ng-container matColumnDef=\\\"picture\\\">\\n          <mat-header-cell *matHeaderCellDef=\\\"let element\\\" style=\\\"flex: 0 0 180px;\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\" style=\\\"flex: 0 0 180px;\\\"><img [src]=\\\"element.picture.url\\\" [width]=\\\"element.picture.width\\\" [height]=\\\"element.picture.height\\\" /></mat-cell>\\n      </ng-container >\\n      \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"title\\\">\\n          <mat-header-cell *matHeaderCellDef=\\\"let element\\\"><strong> Title </strong></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">{{element.title}}</mat-cell>\\n      </ng-container >\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"duration\\\">\\n          <mat-header-cell *matHeaderCellDef=\\\"let element\\\" style=\\\"flex: 0 0 180px;\\\"><strong> Duration </strong></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\" style=\\\"flex: 0 0 180px;\\\">{{element.duration}}</mat-cell>\\n      </ng-container >\\n  \\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"title\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"songDisplay\\\"></mat-row>\\n  </table>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { WebSocketService } from '../../services/web-socket.service';\nimport { Subscription } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material';\nimport { Song } from '../../models/song';\nimport { Action } from '../../models/action';\n\n@Component({\n  selector: 'app-playlist-display',\n  templateUrl: './playlist-display.component.html',\n  styleUrls: ['./playlist-display.component.css']\n})\n\nexport class PlaylistDisplayComponent implements OnInit, OnDestroy {\n\n\n  displayedColumns: string[] = ['picture','title', 'duration'];\n  dataSource: MatTableDataSource<Song>;\n  sub: Subscription;\n\n  constructor(private socketService: WebSocketService) { \n      this.dataSource = new MatTableDataSource<Song>([]);\n  }\n\n  ngOnInit() {\n    this.sub = this.socketService.getQuotes()\n    .subscribe(value => {\n      if (value.action == Action.ADD) { this.dataSource.data.push(value.data); }\n      if (value.action == Action.REMOVE) {\n        this.dataSource.data.shift();\n      }\n      this.dataSource._updateChangeSubscription();\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","module.exports = \"#registerComp\\r\\n{\\r\\n    border-radius: 25px;\\r\\n}\"","module.exports = \"<div style=\\\"margin: auto; padding: 5%; max-width: 60%\\\">\\r\\n    <div class=\\\"card text-white bg-dark mb-3\\\" id=registerComp>\\r\\n        <div class=\\\"card-header\\\" style=\\\"text-align: center;\\\">\\r\\n            <h1>Create New User</h1>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div [hidden]=\\\"submitted\\\">\\r\\n                <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(registerForm)\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <label for=\\\"firstNameInput\\\">First Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstNameInput\\\" name=\\\"firstName\\\" #FirstName=\\\"ngModel\\\" [(ngModel)]=\\\"model.firstname\\\" [pattern]=\\\"namePattern\\\" placeholder=\\\"firstName\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <label for=\\\"LastNameInput\\\">Last Name</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LastNameInput\\\" name=\\\"LastName\\\" #LastName=\\\"ngModel\\\" [(ngModel)]=\\\"model.lastname\\\" [pattern]=\\\"namePattern\\\" placeholder=\\\"LastName\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <label for=\\\"EmailInput\\\">Email</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"EmailInput\\\" name=\\\"email\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" [pattern]=\\\"emailPattern\\\" placeholder=\\\"Email\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <label for=\\\"PasswordInput\\\">Password</label>\\r\\n                            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"PasswordInput\\\" name=\\\"password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"errorCode==-1\\\" style=\\\"color: tomato\\\">\\r\\n                        {{errorMessage}}\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12 mb-3\\\">\\r\\n                            <button type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" class=\\\"btn btn-secondary btn-block\\\"><b> Create User </b></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div [hidden]=\\\"!submitted\\\">Thank you for joining us! Go Share Your Music.</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport { User } from '../../models/user';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  model: User;\r\n  submitted: boolean;\r\n  errorCode: Number;\r\n\r\n  constructor(private auth: AuthenticationService) {}\r\n\r\n  ngOnInit() {\r\n    this.model = new User();\r\n    this.model.firstname = \"\",\r\n    this.model.lastname = \"\",\r\n    this.model.email = \"\",\r\n    this.model.password = \"\",\r\n    this.model.privileges = [];\r\n    this.submitted = false;\r\n    this.errorCode = -1;\r\n  }\r\n\r\n  emailPattern = \"^[a-zA-Z0-9\\.\\_\\%\\+\\-]+\\@\\[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,4}$\";\r\n  namePattern = \"^[a-zA-Z][a-zA-Z]+\";\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.auth.register(this.model.email, this.model.firstname, this.model.lastname, this.model.password)\r\n      .subscribe({\r\n        next: () => { \r\n          this.submitted = true;\r\n          this.errorCode = -1;\r\n        }, error: () => this.errorCode = this.auth.errorCode()\r\n      });\r\n  }\r\n\r\n  get errorMessage() {\r\n    switch(this.auth.errorCode()) {\r\n      case 500:\r\n        return \"An internal error has been accord\";\r\n      case -1:\r\n        return \"\";\r\n      default:\r\n        return \"Unknown error has been accord. please try again latter\"\r\n    }\r\n   }\r\n}","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-user-home',\r\n  template: `\r\n  <div class=\"main-container\">\r\n      <div class=\"playlistDiplay\">\r\n          <app-playlist-display></app-playlist-display>\r\n      </div>\r\n      <div *ngIf=\"isloggedin()\" class=\"newSongDisplay\">\r\n          <add-song-component></add-song-component>\r\n      </div>\r\n  </div>\r\n  `,\r\n  styles: [`\r\n  .main-container {\r\n      width: 96%;\r\n      height: 100%;\r\n      margin-left: 2%;\r\n      margin-right: 2%;\r\n      display: block;\r\n      border: 0px;\r\n  }\r\n  .playlistDiplay {\r\n    display: block;\r\n    height: 85%;\r\n    overflow: auto;\r\n    border: 0px;\r\n  }\r\n  .newSongDisplay {\r\n    display: block;\r\n    height: 10%;\r\n    margin-top: 1%;\r\n    border: 0px;\r\n  }\r\n  `],\r\n})\r\n\r\nexport class UserHomeComponent {\r\n\r\n  constructor(private auth: AuthenticationService) {}\r\n\r\n  isloggedin() {\r\n    return this.auth.isLoggedIn();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\n//----------------------------------//\n//            Imports               //\n//----------------------------------//\nimport { CommonModule }             from '@angular/common';\nimport { HttpClientModule }         from '@angular/common/http';\nimport { MatTableModule }           from '@angular/material';\nimport { FormsModule }              from '@angular/forms';\nimport { AgmCoreModule }            from '@agm/core';\nimport { ViewerRoutes }             from './viewer.routing';\n//----------------------------------//\n//          Declarations            //\n//----------------------------------//\nimport { AddSongComponent }         from './add-song.component';\nimport { PlaylistDisplayComponent } from './playlist-dsiplay.component';\nimport { ContactUsComponent }       from './contact-us.component';\nimport { AboutComponent }           from './about.component';\nimport { UserHomeComponent }        from './user-home.component';\nimport { LoginComponent }           from './login.component';\nimport { RegisterComponent }        from './register.component';\nimport { DiscoverComponent }        from './discover.component';\n//----------------------------------//\n//            Services              //\n//----------------------------------//\nimport { WebSocketService }         from '../../services/web-socket.service';\nimport { ContactService } from '../../services/contact.service';\n\n@NgModule({\n  declarations: [\n    UserHomeComponent,\n    AddSongComponent,\n    PlaylistDisplayComponent,\n    ContactUsComponent,\n    AboutComponent,\n    LoginComponent,\n    RegisterComponent,\n    DiscoverComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    MatTableModule,\n    ViewerRoutes,\n    AgmCoreModule.forRoot({\n      apiKey:'AIzaSyB9KcHxuhLNREX9ySyQuvRkQcuyG9BEsrU'\n    })\n  ],\n  providers: [\n    WebSocketService,\n    ContactService\n  ],\n  exports: [\n    UserHomeComponent,\n  ]\n})\nexport class ViewerModule { }\n","import { RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { AboutComponent } from './about.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { ContactUsComponent } from './contact-us.component';\r\nimport { UserHomeComponent } from './user-home.component';\r\nimport { RegisterComponent } from './register.component';\r\nimport { DiscoverComponent } from './discover.component';\r\n\r\nexport const ViewerRoutes: ModuleWithProviders = RouterModule.forChild([\r\n    { path: '',   component: UserHomeComponent },\r\n    { path: 'about',   component: AboutComponent },\r\n    { path: 'contact', component: ContactUsComponent},\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'login',    component: LoginComponent },\r\n    { path: 'discover', component: DiscoverComponent },\r\n]);","import { NgModule }           from '@angular/core';\r\nimport { RouterModule,\r\n         Routes,\r\n         PreloadAllModules }  from '@angular/router';\r\nimport { LoginComponent }     from './pages/RegularUser/login.component';\r\nimport { RegisterComponent }  from './pages/RegularUser/register.component';\r\nimport { DiscoverComponent }  from './pages/RegularUser/discover.component';\r\nimport { HomeComponent } from './home.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'home',     component: HomeComponent},\r\n    { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n   // { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { enableTracing: false,                     // <-- debugging purposes only\r\n              preloadingStrategy: PreloadAllModules }, \r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class AppRouteModule {}","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\nimport { ServerHandlerService } from './server-handler.service';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpResponseObject } from '../models/http-response-object';\r\n\r\n@Injectable()\r\n\r\nexport class AuthenticationService {\r\n\r\n    private tokenKey:string = \"Token\"\r\n\r\n    private _user: User;\r\n    private _authenticate: Boolean;\r\n    private _token: string;\r\n    private _errorCode: Number;\r\n\r\n    constructor(private _server: ServerHandlerService) {\r\n        try {\r\n            this._token = localStorage.getItem(this.tokenKey);\r\n            this._user = new User;\r\n            this._user.fromJson(atob(this._token.split('.')[1]));\r\n            this._authenticate = true;\r\n        } catch {\r\n            localStorage.clear();\r\n            this._authenticate = false;\r\n        }\r\n        this._errorCode = -1;\r\n    }\r\n\r\n    authenticate(email: string, password: string): Observable<Boolean> {\r\n        this._user = new User;\r\n        this._user.email = email;\r\n        this._user.password = password;\r\n\r\n        return new Observable((observer) => {\r\n            this._server.post('/api/login', this._user, this._token)\r\n            .subscribe({\r\n                next: (value: HttpResponseObject) => {\r\n                    try {\r\n                        localStorage.setItem(this.tokenKey, value.data['token']);\r\n                        this._token = value.data['token'];\r\n                        this._user.fromJson(JSON.parse(atob(this._token.split(\".\")[1])));\r\n                        this._authenticate = true;\r\n                        observer.next();\r\n                    } catch (err) {\r\n                        localStorage.removeItemItem(this.tokenKey);\r\n                        this._token = null;\r\n                        this._user.privileges = [];\r\n                        this._authenticate = false;\r\n                        observer.error();\r\n                    }\r\n                },\r\n                error: (err: HttpResponseObject) => {\r\n                    this._errorCode = err.code;\r\n                    this._authenticate = false;\r\n                    observer.error();\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    register (email: string, firstname: string, lastname: string, password: string) {\r\n        this._user = new User;\r\n        this._user.firstname = firstname;\r\n        this._user.lastname = lastname\r\n        this._user.email = email;\r\n        this._user.password = password;\r\n\r\n        return new Observable((observer) => {\r\n            this._server.post('/api/register', this._user, this._token)\r\n                .subscribe({\r\n                    next: (value: HttpResponseObject) => {\r\n                        try {\r\n                            localStorage.setItem(this.tokenKey, value.data['token']);\r\n                            this._token = value.data['token'];\r\n                            this._user.fromJson(JSON.parse(atob(this._token.split(\".\")[1])));\r\n                            this._authenticate = true;\r\n                            observer.next();\r\n                        } catch (err) {\r\n                            localStorage.removeItem(this.tokenKey);\r\n                            this._token = null;\r\n                            this._user.privileges = [];\r\n                            this._authenticate = false;\r\n                            observer.error();\r\n                        }\r\n                    },\r\n                    error: (err: HttpResponseObject) => {\r\n                        this._errorCode = err.code;\r\n                        this._authenticate = false;\r\n                        observer.error();\r\n                    }\r\n            })\r\n        })\r\n    }\r\n\r\n    logout(): Observable<Boolean> { \r\n        return new Observable(observer => {\r\n            this._server.get('/api/logout', this._token)\r\n                .subscribe({\r\n                    next: () => {\r\n                        localStorage.removeItem(this.tokenKey);\r\n                        this._token = null;\r\n                        this._user = new User;\r\n                        this._authenticate = false;\r\n                        observer.next();\r\n                    },\r\n                    error: (err) => {\r\n                        this._errorCode = err.code;\r\n                        observer.error();\r\n                    }\r\n                });\r\n            })\r\n    }\r\n    \r\n    errorCode() { return this._errorCode; }\r\n    isLoggedIn() { return this._authenticate; }\r\n    \r\n    get Token() { return this._token; }\r\n    get FirtName() { return this._user.firstname; }\r\n    get Lastname() { return this._user.lastname; }\r\n    get Email() { return this._user.email; }\r\n\r\n    get Privileges() { \r\n        if (this._user)\r\n            return this._user.privileges\r\n        else\r\n            return [];\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { ServerHandlerService } from './server-handler.service';\nimport { DataSerialize } from '../models/data-serialize';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ContactService {\n\n    constructor(private server: ServerHandlerService) { }\n\n    send(data: DataSerialize) {\n        return new Observable(observer => {\n            this.server.post('/api/contact-us', data)\n                .subscribe({\n                    next: event => observer.next(event),\n                    error: err => observer.error(err) \n                });\n        })\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerHandlerService } from './server-handler.service';\r\nimport { HttpResponseObject } from '../models/http-response-object';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Link } from '../models/Link';\r\n\r\n@Injectable()\r\n\r\nexport class PlayerService {\r\n\r\n    constructor(private server: ServerHandlerService, private auth: AuthenticationService) {}\r\n\r\n    nextSong() :Observable<HttpResponseObject> {\r\n        return new Observable(observer => {\r\n            this.server.get(\"/api/playlist/next\", this.auth.Token)\r\n                .subscribe({\r\n                    next: (value) => observer.next(value),\r\n                    error: (err) => observer.error(err)\r\n                })\r\n        });\r\n    }\r\n    addSong(link: string) {\r\n        return new Observable(observer => {\r\n            this.server.post(\"/api/playlist/add\", new Link(link), this.auth.Token)\r\n                .subscribe({\r\n                    next: (value) => observer.next(value),\r\n                    error: (err) => observer.error(err)\r\n                });\r\n        });\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport {\r\n    HttpClient,\r\n    HttpErrorResponse,\r\n    HttpResponse,\r\n    HttpRequest,\r\n    HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpResponseObject } from \"../models/http-response-object\";\r\nimport { DataSerialize } from \"../models/data-serialize\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\n\r\nexport class ServerHandlerService {\r\n\r\n    _baseURL = environment.baseURL;\r\n\r\n    constructor(private _server: HttpClient) {}\r\n\r\n    public get(url: string, token?:string): Observable<HttpResponseObject> {\r\n        var _token = token || \"\";\r\n        var _headers = new HttpHeaders({'content-type': 'application/json', 'X-Auth-Token': _token});\r\n        var _request = new HttpRequest<Object>(\"GET\", `${this._baseURL}${url}`, {headers: _headers})\r\n        return this.send(_request);\r\n    }\r\n\r\n    public post(url: string, data: DataSerialize, token?:string): Observable<HttpResponseObject> {\r\n        var _token = token || \"\";\r\n        var _headers = new HttpHeaders({'content-type': 'application/json', 'X-Auth-Token': _token});\r\n        var _request = new HttpRequest<Object>(\"POST\",`${this._baseURL}${url}`, data.toJson(), {headers: _headers});\r\n        return this.send(_request);\r\n    }\r\n\r\n    public delete(url: string, data: DataSerialize, token:string): Observable<HttpResponseObject> {\r\n        var _token = token || \"\";\r\n        var _headers = new HttpHeaders({'content-type': 'application/json', 'X-Auth-Token': _token});\r\n        var _request = new HttpRequest<Object>(\"DELETE\",`${this._baseURL}/${url}`, data.toJson(), {headers: _headers});\r\n        return this.send(_request);\r\n    }\r\n\r\n    private send(request: HttpRequest<Object>): Observable<HttpResponseObject> {\r\n        return new Observable<HttpResponseObject>((observer) => {\r\n            this._server.request(request)\r\n            .subscribe({\r\n                next: (res: HttpResponse<any>) => {\r\n                    if (res.type != 0) {\r\n                        observer.next(new HttpResponseObject(res.status, res.statusText, res.body.data));\r\n                    }\r\n                },\r\n                error: (err:HttpErrorResponse) => {\r\n                        observer.error(new HttpResponseObject(err.status, err.statusText, null));\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as socketIo from 'socket.io-client';\n\nconst SERVER_WS_URL = environment.baseURL + \"/playlist\";\n\ninterface Socket {\n    on(event: string, callback: (data: any) => void );\n    emit(event: string, data: any);\n}\n\n@Injectable()\nexport class WebSocketService {\n\n    socket: Socket;\n    observer: Observer<any>;\n  \n    getQuotes() : Observable<any> {\n        this.socket = socketIo(SERVER_WS_URL);\n\n        this.socket.on('update', (res) => {\n          this.observer.next(res);\n        });\n\n        return this.createObservable();\n    }\n\n    createObservable() : Observable<any> {\n        return new Observable(observer => {\n            this.observer = observer;\n        });\n    }\n\n    private handleError(error) {\n        console.error('server error:', error);\n        if (error.error instanceof Error) {\n            let errMessage = error.error.message;\n            return Observable.throw(errMessage);\n        }\n        return Observable.throw(error || 'Socket.io server error');\n      }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseURL: \"\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}